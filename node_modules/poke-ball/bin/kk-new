#!/usr/bin/env node

var program = require('commander');
var child_process = require('child_process');
var colors = require('colors');

var version = require('../package.json').version;
var FileTools = require('../tools/file.js').FileTools;
var DirTools = require('../tools/file.js').DirTools;
var path = require('../tools/path');

program.parse(process.argv)

var args = program.args;
var projectName = args[0];

if (!projectName) {
  console.log('please input a valid projectName'.red);
  return;
}

console.log("kk-new args:", args);
var dirList = DirTools.readDir(process.cwd());

for (var k in dirList) {
  if (dirList[k] == projectName) {
    console.log(`the project ${projectName} is exist`.red);
    return;
  }
}

// process.cwd()指当前所在的工作目录，__dirname指的是执行源文件所在目录
/*将seed从CLI中拆分，每次新建seed的时候download即可*/
var download = child_process.spawn('git', ['clone', '--depth=1', 'https://github.com/zhentaoo/vue-seed', process.cwd()+'/'+projectName]);

console.log('start download vue-seed from https://github.com/zhentaoo/vue-seed'.cyan);

download.stderr.on('data', (data) => {
  console.log(data.toString().cyan);
});

download.stdout.on('data', (data) => {
  console.log(data.toString().cyan);
});

download.on('close', (code) => {
  if (code !== 0) {
    console.log(`download process exited with code ${code}`);
  } else {
    child_process.spawn('rm', ['-rf', process.cwd()+'/'+projectName+'/.git']);
    console.log(`new project ${projectName} success`.green);
  }
});

/*之前的方式，复制CLI中的seed*/
// child_process.spawn('cp', ['-r', path.CLI_VUE, process.cwd() + '/' + projectName]);
